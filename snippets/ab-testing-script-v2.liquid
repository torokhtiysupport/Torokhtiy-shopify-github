{%- comment -%}
  <gem-script-version>20230417-1</gem-script-version>

  WARNING: This file is system-generated by GemPages and should not be modified manually.
{%- endcomment -%}
<script data-author="gempages" type="text/javascript">
  function setCookie(name, value, days, path) {
    var expires = "";
    if (days) {
      var date = new Date();
      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
      expires = "; expires=" + date.toUTCString();
    }
    if (!path){
      path = "/";
    }
    document.cookie = name + "=" + (value || "") + expires + "; path=" + path;
  }

  function getCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(";");
    for (var i = 0; i < ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0) == " ") c = c.substring(1, c.length);
      if (c.indexOf(nameEQ) == 0)
        return c.substring(nameEQ.length, c.length);
    }
    return null;
  }

  function setStyle(url) {
    const linkTag = document.createElement("link");
    linkTag.setAttribute("rel", "stylesheet");
    linkTag.setAttribute("type", "text/css");
    linkTag.setAttribute("href", url);
    document.getElementsByTagName("body")[0].appendChild(linkTag);
  }

  const pageIDs = [];
  pageIDs.push(TEMPLATE_A);
  pageIDs.push(TEMPLATE_B);

  let currentState = parseInt(getCookie(`gem-product-state-${CAMPAIGN_ID}-${CAMPAIGN_STARTED_AT}`));
  if (!pageIDs.includes(currentState)) {
    const rand = Math.random();
    currentState = rand <= CAMPAIGN_RATE ? TEMPLATE_A : TEMPLATE_B
    setCookie(`gem-product-state-${CAMPAIGN_ID}-${CAMPAIGN_STARTED_AT}`, `${currentState}`, `${CAMPAIGN_DURATION}`);
  }

  const gfTemplate = document.querySelector(`#g_${currentState}`);
  document.querySelector('#gf_body_ab_testing').innerHTML = gfTemplate.innerHTML;

  var pageLibs = eval(`pageLibs_${currentState}`);
  setStyle(eval(`cssUrl_${currentState}`));
  eval(`cssLibs_${currentState}`).forEach((lib) => setStyle(lib));

  var divBody = document.getElementById("gf_body_ab_testing");
  var scriptTags = divBody.getElementsByTagName("script");
  for (let i = 0; i < scriptTags.length; i++) {
    var jsCode;
    jsCode = scriptTags[i].innerText;
    try {
      if (!jsCode && scriptTags[i]['src']) {
        var s = document.createElement( 'script' );
        s.setAttribute( 'src', scriptTags[i]['src'] );
        document.body.appendChild( s );
      }
      else {
        eval(jsCode);
      }
    } catch(e) {}
  }

  function checkIfGoogleAnalyticsLoaded(callback) {
    if (window.trekkie && (window.ga || window.gtag)) {
      if(callback && typeof callback == "function") {
        callback();
      }
    } else {
      // Retry. Probably want to cap the total number of times you call this.
      setTimeout(() => checkIfGoogleAnalyticsLoaded(callback), 500);
    }
  }

  function sendEventToGoogleAnalytics(eventType) {
    const eventName = `${eventType}_${CAMPAIGN_ID}_${currentState}`;

    if (window.gtag) {
      window.gtag('event', eventName, {
        'event_category': "GemPagesABTesting",
        'variant_id': `${currentState}`,
        'campaign_id': `${CAMPAIGN_ID}`
      });
    } else if (window.ga) {
      window.ga("send", "event", {
        eventCategory: "GemPagesABTesting",
        eventAction: eventName,
        nonInteraction: true,
      });
    }
  }

  var sendDataToGoogleAnalytics = function() {
    sendEventToGoogleAnalytics("pageView")

    forms = document.getElementsByTagName("form");
    Array.from(forms).forEach((form) => {
      if (form.getAttribute("action") !== "/cart/add") {
        return;
      }
      addToCardBtns = form.getElementsByClassName("gf_add-to-cart");
      if (addToCardBtns.length == 0) {
        buttons = form.getElementsByTagName("button");
        Array.from(buttons).forEach((btn) => {
          if (btn.getAttribute("type") !== "submit") {
            return;
          }
          btn.addEventListener("click", function () {
            sendEventToGoogleAnalytics("addToCart")
          })
        });
      } else {
        Array.from(addToCardBtns).forEach((btn) => {
          btn.addEventListener("click", function () {
            sendEventToGoogleAnalytics("addToCart")
          })
        });
      }
    });
  }

  checkIfGoogleAnalyticsLoaded(sendDataToGoogleAnalytics);
  window.upcartOnAddToCart = () => sendEventToGoogleAnalytics("addToCart")
</script>
